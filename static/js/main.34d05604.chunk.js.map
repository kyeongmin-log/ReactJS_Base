{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","prototype","PropTypes","number","isRequired","string","arrayOf","Home","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAYeA,MATf,WACE,OACE,sBAAKC,UAAU,mBAAf,UACE,uEACA,oD,gGCDN,SAASC,EAAT,GAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,qBAAKP,UAAU,QAAf,SACE,eAAC,IAAD,CACEQ,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,WARN,UAYE,qBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACGO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBf,UAAU,gBAA1B,SACGc,GADMC,QAKb,oBAAGf,UAAU,iBAAb,UAA+BK,EAAQW,MAAM,EAAG,KAAhD,iBAOVf,EAAMgB,UAAY,CAChBf,GAAIgB,IAAUC,OAAOC,WACrBjB,KAAMe,IAAUC,OAAOC,WACvBhB,MAAOc,IAAUG,OAAOD,WACxBf,QAASa,IAAUG,OAAOD,WAC1Bd,OAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BnB,QCIAsB,G,kNA9Cbb,MAAQ,CACNc,UAAU,EACVC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,UAAU,IARxB,2C,kEAWVQ,KAAKN,c,+BAEG,IAAD,EACsBM,KAAKtB,MAA1Bc,EADD,EACCA,SAAUC,EADX,EACWA,OAClB,OACE,yBAASzB,UAAU,YAAnB,SACGwB,EACC,qBAAKxB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGyB,EAAOZ,KAAI,SAACoB,GAAD,OACV,cAAC,EAAD,CAEE/B,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAM/B,e,GA/BRiC,IAAMC,YCgBVC,E,kLAjBQ,IAAD,EACYL,KAAKM,MAA3BC,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS7B,OACX8B,EAAQE,KAAK,O,+BAGP,IACAH,EAAaP,KAAKM,MAAlBC,SAER,OAAIA,EAAS7B,MACJ,+BAAO6B,EAAS7B,MAAMN,QAEtB,S,GAdQ+B,IAAMC,W,MCWZO,MATf,WACE,OACE,sBAAK3C,UAAU,MAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,YCYSoC,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAWhD,IAChC,cAAC,IAAD,CAAO8C,KAAK,aAAaC,OAAO,EAAMC,UAAWV,QCXvDW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34d05604.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\"Life is not fair; get used to it.\"</span>\r\n      <span>- Bill Gates</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\n//es6 문법. ex)원래 props를 가져와서 props.id 이런 식으로 썼지만 {id}라는 문법을 통해 바로 id로 쓸 수 있다.\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 100)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n//타입 검사\r\nMovie.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoding: true,\r\n    movies: [],\r\n  };\r\n  //async, await : axios로 데이터를 가져오는 건 빠르지 않다. 그렇기에 데이터를 가져올 때까지 기다려달라고 요청할 필요가 있다. 이때 사용하는 것이 async, await이다.\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({ movies, isLoding: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoding, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoding ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  //class component 내에서 render가 실행되기 전에 실행됨\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\"); //url의 기능으로 앞으로,뒤로, 새로고침 등이 가능\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    //넘어간 페이지에서 새로고침할 경우 즉, 렌더가 될 경우 location.state값이 undefined이므로 에러가 난다. 이를 방지하기 위해 state가 undefined값이면 null 값을 보내준다.\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport \"./App.css\";\r\nimport \"./Reset.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" exact={true} component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}